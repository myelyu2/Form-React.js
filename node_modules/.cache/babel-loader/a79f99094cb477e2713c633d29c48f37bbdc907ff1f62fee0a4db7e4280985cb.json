{"ast":null,"code":"var _jsxFileName = \"/Users/malika/Desktop/react-pract/form/src/components/Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button } from 'react-bootstrap';\nimport { getDataCache } from '../axios-api-setup';\nimport Name from './name';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyForm = () => {\n  _s();\n  // const [ name, setName ] = useState('')\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [selectedOccupation, setSelectedOccupation] = useState('');\n  const [selectedState, setSelectedState] = useState('');\n  const [occupationOptions, setOccupationOptions] = useState(['']);\n  const [stateOptions, setStateOptions] = useState(['']);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    occupation: '',\n    state: ''\n  });\n  useEffect(() => {\n    getDataCache().then(res => {\n      setOccupationOptions(res.occupations);\n      setStateOptions(res.states.map(state => state.abbreviation));\n    });\n  }, []);\n\n  // console.log(Name.arguments.name)\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log('IM HERE', value);\n    if (name === 'name') setFormData({\n      ...formData,\n      name: value\n    });\n    if (name === 'email') setFormData({\n      ...formData,\n      email: value\n    });\n    if (name === 'password') setFormData({\n      ...formData,\n      password: value\n    });\n    if (name === 'occupation') setFormData({\n      ...formData,\n      occupation: value\n    });\n    if (name === 'state') setFormData({\n      ...formData,\n      state: value\n    });\n\n    // if (name === 'name') setName(value);\n    // if (name === 'email') setEmail(value);\n    // if (name === 'password') setPassword(value);\n    // if (name === 'occupation') setSelectedOccupation(selectedOccupation);\n    // if (name === 'state') setSelectedState(selectedState);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // sendFormData()\n    // console.log('Name:', name)\n    console.log(formData);\n    console.log('Email:', email);\n    console.log('Password:', password);\n    console.log('Occupation:', selectedOccupation);\n    console.log('State:', selectedState);\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Name, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter Email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Create Password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formOccupation\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Occupation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        defaultValue: \"\",\n        onChange: e => setSelectedOccupation(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an occupation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), occupationOptions.map(occupationOption => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: [\" \", occupationOption, \" \"]\n        }, occupationOption, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formState\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        defaultValue: \"\",\n        onChange: e => setSelectedState(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), stateOptions.map(stateOption => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: stateOption\n        }, stateOption, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(MyForm, \"iIho1B29i/yoLbVutgmMaVXuUWE=\");\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","getDataCache","Name","MyForm","email","setEmail","password","setPassword","selectedOccupation","setSelectedOccupation","selectedState","setSelectedState","occupationOptions","setOccupationOptions","stateOptions","setStateOptions","formData","setFormData","name","occupation","state","then","res","occupations","states","map","abbreviation","handleChange","e","value","target","console","log","handleSubmit","preventDefault","occupationOption","stateOption"],"sources":["/Users/malika/Desktop/react-pract/form/src/components/Form.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Button } from 'react-bootstrap'\nimport { getDataCache } from '../axios-api-setup'\nimport Name from './name'\n\nconst MyForm = () => {\n    // const [ name, setName ] = useState('')\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n    const [ selectedOccupation, setSelectedOccupation ] = useState('');\n    const [ selectedState, setSelectedState ] = useState('');\n    const [ occupationOptions, setOccupationOptions ] = useState([''])\n    const [ stateOptions, setStateOptions ] = useState([''])\n\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        occupation: '',\n        state: ''\n    });\n\n\n    useEffect(() => {\n        getDataCache().then(res => {\n            setOccupationOptions(res.occupations)\n            setStateOptions(res.states.map(state => state.abbreviation))\n        });\n    }, []);\n    \n    // console.log(Name.arguments.name)\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        console.log('IM HERE', value)\n        if (name === 'name') setFormData({ ...formData, name: value })\n        if (name === 'email') setFormData({ ...formData, email: value })\n        if (name === 'password') setFormData({ ...formData, password: value })\n        if (name === 'occupation') setFormData({ ...formData, occupation: value })\n        if (name === 'state') setFormData({ ...formData, state: value })\n        \n        // if (name === 'name') setName(value);\n        // if (name === 'email') setEmail(value);\n        // if (name === 'password') setPassword(value);\n        // if (name === 'occupation') setSelectedOccupation(selectedOccupation);\n        // if (name === 'state') setSelectedState(selectedState);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        // sendFormData()\n        // console.log('Name:', name)\n        console.log(formData)\n        console.log('Email:', email)\n        console.log('Password:', password)\n        console.log('Occupation:', selectedOccupation)\n        console.log('State:', selectedState)\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            {/* NAME */}\n            {/* <Form.Group controlId=\"formName\">\n                <Form.Label>Full Name</Form.Label>\n                <Form.Control \n                    type=\"text\" \n                    placeholder=\"Enter Full Name\" \n                    name=\"name\" \n                    value={name}\n                    onChange={handleChange}\n                />\n            </Form.Group> */}\n            <Name />\n\n            {/* EMAIL */}\n            <Form.Group controlId=\"formEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control \n                    type=\"email\" \n                    placeholder=\"Enter Email\" \n                    name=\"email\" \n                    value={email} \n                    onChange={handleChange}\n                />\n            </Form.Group>\n\n            {/* PASSWORD */}\n            <Form.Group controlId=\"formPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control \n                    type=\"password\" \n                    placeholder=\"Create Password\" \n                    name=\"password\" \n                    value={password} \n                    onChange={handleChange}\n                />\n            </Form.Group>\n\n            {/* OCCUPATIOIN */}\n            <Form.Group controlId=\"formOccupation\">\n                <Form.Label>Occupation</Form.Label>\n                <Form.Control as=\"select\" defaultValue='' onChange={e => setSelectedOccupation(e.target.value)}>\n                    <option value=''>Select an occupation</option>\n                    {occupationOptions.map(occupationOption => (\n                        <option key={occupationOption}> {occupationOption} </option>\n                    ))}\n                </Form.Control>\n\n            </Form.Group>\n\n\n            {/* STATE */}\n            <Form.Group controlId=\"formState\">\n                <Form.Label>State</Form.Label>\n                <Form.Control as=\"select\" defaultValue='' onChange={e => setSelectedState(e.target.value)}>\n                    <option value=''>Select a state</option>\n                    {stateOptions.map(stateOption => (\n                        <option key={stateOption}>{stateOption}</option>\n                        \n                    ))}\n                </Form.Control>\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n                Submit\n            </Button>\n\n        </Form>\n    )\n}\n\nexport default MyForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}