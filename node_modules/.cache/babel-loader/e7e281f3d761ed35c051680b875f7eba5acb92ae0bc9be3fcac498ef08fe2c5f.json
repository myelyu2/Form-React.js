{"ast":null,"code":"var _jsxFileName = \"/Users/malika/Desktop/react-pract/form/src/components/Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport axios from 'axios';\nimport { useState } from \"react\";\nimport { Form, Button } from 'react-bootstrap';\nimport { getDataCache } from \"../cachedRequester\";\nimport { TYPES } from \"@babel/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyForm = () => {\n  _s();\n  const [data, setData] = useState({});\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [selectedOccupation, setSelectedOccupation] = useState('');\n  const [selectedState, setSelectedState] = useState('');\n  const [occupationOptions, setOccupationOptions] = useState(['']);\n  const [stateOptions, setStateOptions] = useState(['']);\n  function getDataCache() {\n    // Check if the data is already in localStorage\n    let data = localStorage.getItem(\"formData\");\n    if (data) {\n      console.log('HELOOOO');\n      return JSON.parse(data);\n    }\n    // If not, send a request to the API\n    return axios.get(\"https://frontend-take-home.fetchrewards.com/form\").then(response => {\n      // Store the data in localStorage\n      localStorage.setItem(\"formData\", JSON.stringify(response.data));\n      return response.data;\n    });\n  }\n  let temp = getDataCache().then(data => {\n    console.log('DATA', data);\n  });\n  console.log(temp);\n\n  // getDataCache().then(\n  //     data => {\n  //         setData(data)\n  //         setOccupationOptions(data.occupations)\n  //         setStateOptions(data.states.map(state => state.abbreviation))\n  //     }\n  // )\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'name') setName(value);\n    if (name === 'email') setEmail(value);\n    if (name === 'password') setPassword(value);\n    if (name === 'occupation') setSelectedOccupation(selectedOccupation);\n    if (name === 'state') setSelectedState(selectedState);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // sendFormData()\n    console.log('Name:', name);\n    console.log('Email:', email);\n    console.log('Password:', password);\n    console.log('Occupation:', selectedOccupation);\n    console.log('State:', selectedState);\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formName\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Full Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter Full Name\",\n        name: \"name\",\n        value: name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter Email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Create Password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formOccupation\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Occupation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        defaultValue: \"\",\n        onChange: e => setSelectedOccupation(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an occupation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), occupationOptions.map(occupationOption => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: [\" \", occupationOption, \" \"]\n        }, occupationOption, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formState\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        defaultValue: \"\",\n        onChange: e => setSelectedState(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), stateOptions.map(stateOption => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: stateOption\n        }, stateOption, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(MyForm, \"mL6/afIv8CweGVud19S1vNsbDAU=\");\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","useEffect","axios","useState","Form","Button","getDataCache","TYPES","MyForm","data","setData","name","setName","email","setEmail","password","setPassword","selectedOccupation","setSelectedOccupation","selectedState","setSelectedState","occupationOptions","setOccupationOptions","stateOptions","setStateOptions","localStorage","getItem","console","log","JSON","parse","get","then","response","setItem","stringify","temp","handleChange","e","value","target","handleSubmit","preventDefault","map","occupationOption","stateOption"],"sources":["/Users/malika/Desktop/react-pract/form/src/components/Form.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from 'axios';\nimport { useState } from \"react\";\nimport { Form, Button } from 'react-bootstrap'\nimport { getDataCache } from \"../cachedRequester\";\nimport { TYPES } from \"@babel/types\";\n\nconst MyForm = () => {\n    const [ data, setData ] = useState({})\n    const [ name, setName ] = useState('')\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n    const [ selectedOccupation, setSelectedOccupation ] = useState('');\n    const [ selectedState, setSelectedState ] = useState('');\n    const [occupationOptions, setOccupationOptions] = useState([''])\n    const [stateOptions, setStateOptions] = useState([''])\n\n    function getDataCache() {\n        // Check if the data is already in localStorage\n        let data = localStorage.getItem(\"formData\");\n        if (data) {\n            console.log('HELOOOO', )\n            return JSON.parse(data)\n        }\n        // If not, send a request to the API\n        return axios\n            .get(\"https://frontend-take-home.fetchrewards.com/form\")\n            .then(response => {\n                // Store the data in localStorage\n                localStorage.setItem(\"formData\", JSON.stringify(response.data));\n                return response.data;\n            });\n    }\n\n    let temp = getDataCache().then(data => {\n        console.log('DATA', data)\n    })\n    console.log(temp)\n    \n    // getDataCache().then(\n    //     data => {\n    //         setData(data)\n    //         setOccupationOptions(data.occupations)\n    //         setStateOptions(data.states.map(state => state.abbreviation))\n    //     }\n    // )\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        if (name === 'name') setName(value);\n        if (name === 'email') setEmail(value);\n        if (name === 'password') setPassword(value);\n        if (name === 'occupation') setSelectedOccupation(selectedOccupation);\n        if (name === 'state') setSelectedState(selectedState);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        // sendFormData()\n        console.log('Name:', name)\n        console.log('Email:', email)\n        console.log('Password:', password)\n        console.log('Occupation:', selectedOccupation)\n        console.log('State:', selectedState)\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            {/* NAME */}\n            <Form.Group controlId=\"formName\">\n                <Form.Label>Full Name</Form.Label>\n                <Form.Control \n                    type=\"text\" \n                    placeholder=\"Enter Full Name\" \n                    name=\"name\" \n                    value={name}\n                    onChange={handleChange}\n                />\n            </Form.Group>\n\n            {/* EMAIL */}\n            <Form.Group controlId=\"formEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control \n                    type=\"email\" \n                    placeholder=\"Enter Email\" \n                    name=\"email\" \n                    value={email} \n                    onChange={handleChange}\n                />\n            </Form.Group>\n\n            {/* PASSWORD */}\n            <Form.Group controlId=\"formPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control \n                    type=\"password\" \n                    placeholder=\"Create Password\" \n                    name=\"password\" \n                    value={password} \n                    onChange={handleChange}\n                />\n            </Form.Group>\n\n            {/* OCCUPATIOIN */}\n            <Form.Group controlId=\"formOccupation\">\n                <Form.Label>Occupation</Form.Label>\n                <Form.Control as=\"select\" defaultValue='' onChange={e => setSelectedOccupation(e.target.value)}>\n                    <option value=''>Select an occupation</option>\n                    {occupationOptions.map(occupationOption => (\n                        <option key={occupationOption}> {occupationOption} </option>\n                    ))}\n                </Form.Control>\n\n            </Form.Group>\n\n\n            {/* STATE */}\n            <Form.Group controlId=\"formState\">\n                <Form.Label>State</Form.Label>\n                <Form.Control as=\"select\" defaultValue='' onChange={e => setSelectedState(e.target.value)}>\n                    <option value=''>Select a state</option>\n                    {stateOptions.map(stateOption => (\n                        <option key={stateOption}>{stateOption}</option>\n                        \n                    ))}\n                </Form.Control>\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n                Submit\n            </Button>\n\n        </Form>\n    )\n}\n\nexport default MyForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}